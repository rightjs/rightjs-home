<h1>JSON Support</h1><% @title_text = 'Goods: JSON Support' %>

<p>
  This module provides the standard JSON import/export functionality, plus some additional features
</p>

<h2>JSON Encoding And Decoding</h2>
<p>
  The basic JSON import/export works through the standard interface like this.
</p>
<code>
JSON.encode([1,2,3]);   // -> '[1,2,3]'

JSON.decode('[1,2,3]'); // -> [1,2,3]
</code>
<p>
  The <tt>JSON.encode</tt> method also watches if an object provides the <tt>toJSON</tt> method and if so
  then uses it to export given object into a json string.
</p>

<h2>Better Xhr JSON Check</h2>
<p>
  By default the {Xhr} module checks the json responses consistency with a simplified procedure. If you need
  something better then include this module and all the xhr requests will be checked by the full check procedure
  defined at json.org.
</p>

<h2>Cookie Extension</h2>
<p>
  By default the {Cookie} module works with strings only. If you include this module then the {Cookie}
  class will automatically export/import the incoming data through the JSON encoder, and then you will
  be able transparently save arrays and objects into cookies.
</p>
<code>
Cookie.set('my-options', {width: 100, height: '200px'});

Cookie.get('my-options'); // -> {width: 100, height: '200px'}
</code>
