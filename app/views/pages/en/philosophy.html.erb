<h1>Project Philosophy</h1>

<p>
  Although it looks small simple and not always serious, but this project actually has
  a pretty solid idea behind and if you would like to have it described in one sentence
  I would call it "causal but powerful"
</p>


<h2>Causal but Powerful</h2>
<p>
  RightJS does not have any intention to enlighten you with some radically new approach
  in JavaScript development, but rather does something quite opposite.
</p>
<p>
  The main target of RightJS is to create a simple, fast and reliable tool for a true
  agile development. RightJS simplifies many routine operations making JavaScript
  development an easy and natural thing. It looks simple, it works simple, but that
  is that kind of simplicity that lets you concentrate on serious things instead of
  making you fight for survival. 
</p>


<h2>Designed, not Evolved</h2>
<p>
  Whatever you previous experience is, jQuery, Prototype, Mootools, Ruby, Python or PHP.
  When you look through RightJS API, you immediately spot familiar things. But don't get
  fooled, it was all designed the way it was easy to work with for people with different
  backgrounds.
</p>
<p>
  And it's not just designed to be familiar, it is designed to make JavaScript development
  a most natural thing specifically for the server-side developers who work with dynamic
  languages like Ruby or Python. RightJS has extensive object-oriented programming features,
  standard methods for native units. And that's all so much highly hackable.
</p>


<h2>Don't Learn, Have Fun!</h2>
<p>
  You might noticed that there is not much of the documentation for RightJS. The reason
  is that we simplified and systematically organized all the things the way there is
  almost nothing to learn. Because we don't want you to learn, we want you to have fun.
</p>
<p>
  There are just a few key features in RightJS you need to know to start work with it.
  Well, you even don't need to know them either, because when you see things like that
</p>
<code>
$(element).update('with text').highlight();

$(element).onClick('addClass', 'clicked');

$$('li').each('onClick', 'toggleClass', 'marked');
</code>
<p>
  You don't need to be a genius or read any documentation to figure out what's going on.
  All features in RightJS work globally and simultaneously though the whole framework and
  plugins. And that makes it really easy to understand and use, even for completely new
  people.
</p>


<p>
  That's basically what we're doing in here.
</p>