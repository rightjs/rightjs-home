<% content_for :modules do %>
<script src="/builds/ui/right-lightbox-min.js" type="text/javascript"></script>
<% end %>
<h1>Right Lightbox Demo</h1><% @title_text = 'UI: Lightbox: Demo' %>

<p>Some use cases demo for the <%= link_to 'Right Lightbox', '/ui/lightbox'%> widget</p>

<h2>Standalone Images Displaying</h2>
<p>
  In similarity to the <a href="http://www.huddletogether.com/projects/lightbox2" target="_blank">Lightbox 2</a>
  project, displaying of standalone images in the lightbox does not requires any javascript coding.
  All you need is to specify the <tt>rel="lightbox"</tt> attribute at the link. When page
  is loaded Lightbox will automatically find the links and perform all necessary
  initializations, grab the titles, etc.
</p>
<code>
<a href="1.jpg" rel="lightbox"><img src="1-thmb.jpg"></a>
<a href="2.jpg" rel="lightbox" title="Some title"><img src="2-thmb.jpg"></a>
</code>
<p>
  <a href="/images/test/1.jpg" rel="lightbox" title="Watson's Bay"><img src="/images/test/1-thmb.jpg" /></a>
  <a href="/images/test/2.jpg" rel="lightbox"><img src="/images/test/2-thmb.jpg" /></a>
  <a href="/images/test/3.jpg" rel="lightbox" title="Caravaggio"><img src="/images/test/3-thmb.jpg" /></a>
</p>

<h2>Images Road Trip Displaying</h2>
<p>
  If you want to display some collection of images as an album, without making the user to click each
  link, then you are specifying a slightly different attribute <tt>rel="lightbox[roadtrip]"</tt>.
  All the other principles are the same
</p>
<code>
<a href="1.jpg" rel="lightbox[roadtrip]"><img src="1-thmb.jpg"></a>
<a href="2.jpg" rel="lightbox[roadtrip]"><img src="2-thmb.jpg"></a>
</code>
<p>
  <a href="/images/test/4.jpg" rel="lightbox[roadtrip]" title="Darling Harbour"><img src="/images/test/4-thmb.jpg" /></a>
  <a href="/images/test/5.jpg" rel="lightbox[roadtrip]" title="Coogie"><img src="/images/test/5-thmb.jpg" /></a>
  <a href="/images/test/6.jpg" rel="lightbox[roadtrip]" title="Rain In St.Petersburg"><img src="/images/test/6-thmb.jpg" /></a>
</p>
<p>
  You can use the left and right arrow buttons on your keyboard or the mouse wheel scrolling to list through the images
</p>

<h2>HTML Content Displaying</h2>
<p>
  To display any html content, strings, dom-nodes, node-lists, arrays of elements, etc. Just pass it to the <tt>show</tt> method
</p>
<code>
Lightbox.show($('lorem-block').innerHTML, {width: '20em'});
</code>
<p>
  <a href="" onclick="Lightbox.show($('lorem-block').innerHTML,{width:'20em'}); return false;">Click me to show the text below in the lightbox</a>
</p>
<p id="lorem-block">
  Lorem ipsum dolor <u>sit</u> amet, consectetur adipisicing elit, <b>sed</b> do eiusmod tempor incididunt ut labore et dolore <i>magna</i> aliqua. Ut enim ad minim veniam, quis nostrud <u>exercitation</u> ullamco laboris nisi ut aliquip ex ea commodo <b>consequat</b>. Duis aute irure dolor in <i>reprehenderit</i> in voluptate velit esse cillum <u>dolore</u> eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non <b>proident</b>, sunt in culpa qui <i>officia</i> deserunt mollit anim id est laborum.
</p>

<h2>Content Loading Via Ajax</h2>
<p>
  To load some content via an xhr request just pass its url address to the <tt>load</tt> method. You can also pass any standard {Xhr} class options as the second argument.
</p>
<code>
Lightbox.load('/ui/lightbox/lorem');
</code>
<p>
  <a href="" onclick="Lightbox.load('/ui/lightbox/lorem'); return false;">Try it right here</a>
</p>

<h2>Links Automatic Processing</h2>
<p>
  If you send a dom-node of a link into the <tt>show</tt> method, lightbox will automatically grab the link url address, load it via an ajax request and then show it in the lightbox with the same title the link has.
</p>
<code>
Lightbox.show($('some-link'));
</code>
<p>
  <a href="/ui/lightbox/lorem" title="Loaded By Link" onclick="Lightbox.show(this); return false;">Try it right here</a>
</p>
